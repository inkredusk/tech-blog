<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Threads Of Life</title>
    <link>https://karanbalkar.com/categories/android/</link>
    <description>Recent content in Android on Threads Of Life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Oct 2021 07:53:34 +0530</lastBuildDate><atom:link href="https://karanbalkar.com/categories/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Detect and use light and gyroscope sensors in Android</title>
      <link>https://karanbalkar.com/posts/detect-use-light-gyroscope-sensors-android/</link>
      <pubDate>Tue, 19 Oct 2021 07:53:34 +0530</pubDate>
      
      <guid>https://karanbalkar.com/posts/detect-use-light-gyroscope-sensors-android/</guid>
      <description>Hello everyone!
Sensors play a vital role in any electronic device and more importantly help in detecting or measuring a physical property. Nowadays, Android phones come equipped with a range of sensors including light, pressure, temperature, gyroscope, proximity etc. Developers need to build applications using the functionality of these sensors. For that purpose, one needs to learn how to detect and implement the corresponding sensor functionality. Through this post, we will understand how to detect and use the Light and Gyroscope sensors in Android.</description>
    </item>
    
    <item>
      <title>Handling Screen Orientation Android</title>
      <link>https://karanbalkar.com/posts/handling-screen-orientation-android/</link>
      <pubDate>Thu, 18 Oct 2018 17:28:21 +0530</pubDate>
      
      <guid>https://karanbalkar.com/posts/handling-screen-orientation-android/</guid>
      <description>It is observed that when device configurations including screen orientation, keyboard availability etc change, Android restarts the current Activity. This is done to enable the application to adapt to the new configuration.
In order to declare an Activity that handles configuration changes we must add the android:configChanges attribute with a value that represents the configuration we want to handle, in our AndroidManifest.xml file. There are basically two ways to handle screen orientation in Android.</description>
    </item>
    
    <item>
      <title>Processing for Android</title>
      <link>https://karanbalkar.com/posts/processing-for-android/</link>
      <pubDate>Sat, 18 Aug 2018 20:56:34 +0530</pubDate>
      
      <guid>https://karanbalkar.com/posts/processing-for-android/</guid>
      <description>Hello everyone!
The Processing language has now become a popular development tool for Android applications. It&#39;s latest version 2.0+ allows developers to create an Android application from scratch using the newly added Android mode.
Processing supports many libraries including video, network, PDF export etc. Just as Android, Processing is also open source and can be downloaded for free. Through this post, I will demonstrate how to create an Android application using Processing!</description>
    </item>
    
    <item>
      <title>Implement Spell Checker Android</title>
      <link>https://karanbalkar.com/posts/implement-spell-checker-android/</link>
      <pubDate>Wed, 18 Oct 2017 13:38:30 +0530</pubDate>
      
      <guid>https://karanbalkar.com/posts/implement-spell-checker-android/</guid>
      <description>Hi everyone!
Spell check is of the most common programs used to identify words in a document that may not be spelled correctly. Today, one need not carry a dictionary to self spell check. The age of mobile technology has given rise to a number of applications that incorporate the spell checking functionality. Android offers developers a spelling checker framework. In order to implement the spell checking feature, developers need to make use of the SpellCheckerSessionListener interface.</description>
    </item>
    
    <item>
      <title>Using Proximity Sensor in Android</title>
      <link>https://karanbalkar.com/posts/using-proximity-sensor-in-android/</link>
      <pubDate>Tue, 17 Oct 2017 13:53:26 +0530</pubDate>
      
      <guid>https://karanbalkar.com/posts/using-proximity-sensor-in-android/</guid>
      <description>Hello everyone!
The term proximity is basically the fact, condition or position of being near or close by in space. A proximity sensor is a device capable of detecting presence of nearby objects without any physical contact. Some of the Android phones in the market today come equipped with a proximity sensor.
Through this post, we will learn how to use a proximity sensor in Android. As mentioned in the developer&#39;s guide, the Android platform provides a sensor that lets you determine how close the face of a device is to an object (known as the proximity sensor).</description>
    </item>
    
    <item>
      <title>Using Jsoup on Android</title>
      <link>https://karanbalkar.com/posts/using-jsoup-on-android/</link>
      <pubDate>Tue, 12 Sep 2017 14:05:01 +0530</pubDate>
      
      <guid>https://karanbalkar.com/posts/using-jsoup-on-android/</guid>
      <description>Hello everyone!
As Android developers, we often need to call web services in order to fetch data from a server. We also need to parse the data for displaying it on the user interface. There are various parsers available that enable developers to retrieve data efficiently from a web service. JSoup is one such open source library that provides an API for extracting and manipulating data. Basically, it is an HTML parser used for working with various HTML elements, attributes etc.</description>
    </item>
    
    <item>
      <title>Display list of WiFi Networks in Android</title>
      <link>https://karanbalkar.com/posts/display-list-of-wifi-networks-android/</link>
      <pubDate>Wed, 26 Jul 2017 10:49:50 +0530</pubDate>
      
      <guid>https://karanbalkar.com/posts/display-list-of-wifi-networks-android/</guid>
      <description>Hello everyone!
Android provides the WiFiManager class for managing all aspects of WiFi connectivity. It is used to to define the names of various Intent actions that are broadcast upon any sort of change in WiFi state. Through this post, we will learn how to display a list of available WiFi networks to which an Android device can be connected. The list can be viewed and updated, and attributes of individual entries can be modified.</description>
    </item>
    
    <item>
      <title>Implement Content Provider in Android</title>
      <link>https://karanbalkar.com/posts/implement-content-provider-in-android/</link>
      <pubDate>Sat, 20 May 2017 08:47:31 +0530</pubDate>
      
      <guid>https://karanbalkar.com/posts/implement-content-provider-in-android/</guid>
      <description>Hey everyone!
As developers, we often need to create applications that can share data with other applications residing on the Android device. A content provider is similar to a database where one can query it, edit its content, as well as add or delete content using insert, update, delete, and query methods. As mentioned on the developer&#39;s page, Content providers manage access to a structured set of data. They encapsulate the data, and provide mechanisms for defining data security.</description>
    </item>
    
    <item>
      <title>Display circular ProgressBar in Android</title>
      <link>https://karanbalkar.com/posts/display-circular-progress-bar-android/</link>
      <pubDate>Sun, 30 Oct 2016 10:38:00 +0530</pubDate>
      
      <guid>https://karanbalkar.com/posts/display-circular-progress-bar-android/</guid>
      <description>Hello friends!
In the past we have discussed about creating and displaying a basic ProgressBar in Android. A ProgressBar, as the name suggests is basically used to indicate the progress of an operation. By default the progress bar is a spinning wheel (an indeterminate indicator). However, one can also create a circular ProgressBar by applying certain custom attributes. More such styles can be found over here.
In order to create a circular progress bar we need to add a new XML file in the drawable folder.</description>
    </item>
    
    <item>
      <title>Display ProgressBar in Android</title>
      <link>https://karanbalkar.com/posts/display-progress-bar-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://karanbalkar.com/posts/display-progress-bar-android/</guid>
      <description>Hey everyone!
A ProgressBar is basically a visual indicator of progress in some operation. Implementing a ProgressBar helps in the understanding of processes running on threads separate from the main User Interface (UI) and the communication between threads. As mentioned on the Android developer&#39;s page, a progress bar can also be made indeterminate. In indeterminate mode, the progress bar shows a cyclic animation without an indication of progress. This mode is used by applications when the length of the task is unknown.</description>
    </item>
    
  </channel>
</rss>
